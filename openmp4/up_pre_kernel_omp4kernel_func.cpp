//
// auto-generated by op2.py
//

#include <math.h>
#include "const.h"

void up_pre_kernel_omp4_kernel(
  int *map0,
  int map0size,
  double *data0,
  int dat0size,
  int *data1,
  int dat1size,
  int *col_reord,
  int set_size1,
  int start,
  int end,
  int num_teams,
  int nthread){

  #pragma omp target teams num_teams(num_teams) thread_limit(nthread) \
    map(to:col_reord[0:set_size1],map0[0:map0size],data0[0:dat0size],data1[0:dat1size])
  #pragma omp distribute parallel for schedule(static,1)
  for ( int e=start; e<end; e++ ){
    int n_op = col_reord[e];
    int map0idx;
    map0idx = map0[n_op + set_size1 * 0];

    //variable mapping
    double* variable = &data0[5 * map0idx];
    int* up_scratch = &data1[1 * map0idx];

    //inline function
    
      variable[VAR_DENSITY] = 0.0;
      variable[VAR_MOMENTUM+0] = 0.0;
      variable[VAR_MOMENTUM+1] = 0.0;
      variable[VAR_MOMENTUM+2] = 0.0;
      variable[VAR_DENSITY_ENERGY] = 0.0;
      *up_scratch = 0;
    //end inline func
  }

}
